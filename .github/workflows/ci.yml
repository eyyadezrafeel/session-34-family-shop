name: Backend CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  backend-build:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      # 1️⃣ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Setup Node.js (use Node 20 to match your packages)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3️⃣ Install dependencies
      - name: Install backend dependencies
        run: |
          cd backend
          npm install
          npm install -g wait-on
          cd ..

      # 4️⃣ Start backend for tests with secrets
      - name: Start backend and run tests
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DIRECT_URL: ${{ secrets.DIRECT_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: |
          cd backend
          # Start backend in background
          node index.js &
          PID=$!
          # Wait until backend is ready
          npx wait-on http://localhost:4000/status
          # Run backend tests
          npm test
          # Stop backend after tests
          kill $PID
          cd ..

      # 5️⃣ Optional: Check /status endpoint
      - name: Test /status endpoint
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DIRECT_URL: ${{ secrets.DIRECT_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
        run: |
          RESPONSE=$(curl -s http://localhost:4000/status || echo "FAILED")
          echo "Response: $RESPONSE"
          if [[ "$RESPONSE" != *"OK"* ]]; then
            echo "Backend status check failed!"
            exit 1
          fi
